spring.application.name=DiplomWork

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8081
server.address=0.0.0.0
server.tomcat.connection-timeout=300000
server.tomcat.max-http-form-post-size=50MB
server.tomcat.max-swallow-size=50MB

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

jwt.secret=HHzsmLNR9q3/9MmQAGi3Y4KlrAbpE1XqGDpr9hesVTzeheUKLsQOsSyeeDOvPGx0ghMzj83vRmdZ7DibKHEW4g==

# JWT token lifetime (3 hours)
jwt.expiration=10800000
# Refresh token (30 days)
jwt.refresh.expiration=2592000000

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# Multipart Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2MB
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.resolve-lazily=true

# MVC Configuration
spring.mvc.async.request-timeout=300000

# File Storage Configuration
file.upload-dir=./uploads
file.profile-images-dir=profile-images

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/,file:${file.upload-dir}/
spring.mvc.static-path-pattern=/**

# Jackson Configuration
spring.jackson.serialization.indent_output=true
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Logging Configuration
logging.level.com.example.server.UsPinterest.service=DEBUG
logging.level.org.springframework.web=DEBUG

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=600s

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Add support for Acme challenge for Let's Encrypt
spring.mvc.throw-exception-if-no-handler-found=false
spring.web.resources.add-mappings=true